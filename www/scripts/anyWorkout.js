
//--------------------------------------------------------------------------------------------------------------
//Grab query Parameters and use for displaying workout
//--------------------------------------------------------------------------------------------------------------
var queryString = decodeURIComponent(window.location.search);
queryString = queryString.substring(1);
// console.log("queryString: " + queryString);

var workoutName = queryString.substring(5).replace(/_/g, ' ');
// console.log("queryString workoutName: " + workoutName);

document.getElementById("any_workout_name").innerHTML = workoutName.toUpperCase();


//--------------------------------------------------------------------------------------------------------------
//Workout will be generated by the local memory workout that was created by the user when they click the workout name 
//--------------------------------------------------------------------------------------------------------------
var localStore = JSON.parse(window.localStorage.getItem("Workouts"));


// console.log(localStore.length);

this.workout = [];
for (var i = 0; i < localStore.length; i++) {
	if (localStore[i].name.toString() == workoutName) {
		this.workout = localStore[i];
		//console.log("this.workout: " + this.workout);
	}
}

document.getElementById("any_workout_type").innerHTML = this.workout.type.replace(/_/g, ' ').toUpperCase();

console.log("Starting workout: " + this.workout.workoutName + ", exercises: " + JSON.stringify(workout));


document.getElementById("notes_paragraph").innerHTML = this.workout.notes.toString();

// var workouts = localStore.filter(x => x.);
var maxSets = 0;
// console.log("this.workout.exercises.length: " + this.workout.exercises.length);
var exerciseCount = Math.floor(this.workout.exercises.length / 4.0);

//Get Max Number of Sets
for (var i = 2; i < workout.exercises.length; i += 4) {
	if (this.workout.exercises[i] > maxSets)
		this.maxSets = this.workout.exercises[i];
}
// console.log(maxSets);

//generate table headers
var currentDiv = document.getElementById("any_workout_headers_1");
for (var j = 0; j < this.maxSets; j++) {
	var nodeTD = document.createElement("td")
	nodeTD.innerHTML = "Set " + (j + 1);
	nodeTD.className = "new_workout_data new_workout_headers";
	currentDiv.appendChild(nodeTD);
}

this.workoutNamesList = [];
//Generate Workout names, weight, sets/Reps, empty sets space
for (var k = 0; k < exerciseCount; k++) {
	// console.log(workout.exercises);
	//get table reference
	var table = document.getElementById("any_workout_table")

	//Create Table Row to be added
	var tableRow = document.createElement("tr");
	tableRow.className = "new_workout_row";



	//create data to be added to row
	let tableDataName = document.createElement("td");
	tableDataName.className = "new_workout_data";
	workoutNamesList.push(this.workout.exercises.shift().toString());
	tableDataName.innerHTML = workoutNamesList[k].toString();
	tableRow.appendChild(tableDataName);

	let tableDataWt = document.createElement("td");
	tableDataWt.className = "new_workout_data";
	tableDataWt.innerHTML = this.workout.exercises.shift();
	tableDataWt.contentEditable = "true";
	tableRow.appendChild(tableDataWt);

	let tableDataSNR = document.createElement("td");
	tableDataSNR.className = "new_workout_data";
	tableDataSNR.innerHTML = "<sup>" + this.workout.exercises.shift() + "</sup> / <sub>" + this.workout.exercises.shift() + "</sub>";
	tableRow.appendChild(tableDataSNR);

	for (var l = 0; l < maxSets; l++) {
		let tableDataSet = document.createElement("td");
		tableDataSet.className = "new_workout_data";
		tableDataSet.id = "workout" + (k + 1) + "set" + (l + 1);
		tableDataSet.innerHTML = "";
		tableDataSet.contentEditable = "true";
		tableRow.appendChild(tableDataSet);
	}
	table.appendChild(tableRow);
}



//--------------------------------------------------------------------------------------------------------------
//Start button will start timer and finish button will display elapsed time
//--------------------------------------------------------------------------------------------------------------
//initialize variables to be used across fucntions
var startTime = 0;
var endTime = 0;
var timeElapsed = 0;
var millisecondsElapsed
//start the timer on click
function startTimer() {
	startTime = new Date();
	console.log(startTime.toTimeString());
}

//end timer and find diff
function endTimer() {
	endTime = new Date();
	millisecondsElapsed = endTime - startTime;
	timeElapsed = Math.round((millisecondsElapsed / 1000) / 60)
	// console.log("Minutes Elapsed: " + timeElapsed + ":" + Math.round(millisecondsElapsed / 1000 % 60));
}

//checks if the number is less than ten so we can add a zero before the numebr
function isLessThanTen() {
	if (Math.round(this.millisecondsElapsed / 1000 % 60) < 10)
		return 0;
	else return "";
}

//Saves the completed workout to local Storarge
function saveWorkout() {
	console.log("saveWorkout Hit");
	var lastWorkout = {
		name: null,
		type: null,
		notes: null,
		exercises: [],
		exerciseNames: [],
		arrLength: 0,
		dateCreated: new Date()
	};

	//The name will be used to overwrite the local storage unless I decide to use IDs
	lastWorkout.name = document.getElementById("any_workout_name").innerHTML.toString();
	lastWorkout.notes = document.getElementById("notes_paragraph").innerHTML.toString();
	lastWorkout.type = document.getElementById("any_workout_type").innerHTML.toString();
	lastWorkout.exerciseNames = workoutNamesList;
	console.log(workoutNamesList);
	for (var m = 1; m <= this.exerciseCount; m++) {
		for (var n = 1; n < this.maxSets; n++) {
			if (document.getElementById("workout" + m + "set" + n).innerHTML.length > 0) {
				//add populated cell to the end of the array
				lastWorkout.exercises.push(document.getElementById("workout" + m + "set" + n).innerHTML.toString());
			}
		}
	}
	lastWorkout.arrLength = lastWorkout.length;

	console.log("last Workout to be saved: " + JSON.stringify(lastWorkout));

	// if (localStorage.getItem(workoutName) !== null) {
	// 	workoutHistory = JSON.parse(localStorage.getItem(workoutName));
	// 	workoutHistory.push(lastWorkout);
	// 	localStorage.setItem(workoutName, JSON.stringify(workoutHistory));
	// } else {
	localStorage.setItem(workoutName, JSON.stringify(lastWorkout));
	// }
}

//Displays the time in the appropriate spot; appends child node if doesnt exist
function displayWorkoutMinutesAndSave() {
	endTimer();
	let displayTimeLabel = document.createElement("h2");
	displayTimeLabel.innerHTML = "TIME ELAPSED";
	displayTimeLabel.style = "margin_top: 1.5rem;";
	displayTimeLabel.id = "displayTimeLabel";


	let displayTime = document.createElement("h2");
	displayTime.innerHTML = this.timeElapsed + ":" + isLessThanTen() + Math.round(this.millisecondsElapsed / 1000 % 60);
	displayTime.id = "display_time";

	if (document.getElementById("displayTimeLabel") != 'undefined' && document.getElementById("displayTimeLabel") != null) {
		document.getElementById("display_time").innerHTML = this.timeElapsed + ":" + isLessThanTen() + Math.round(this.millisecondsElapsed / 1000 % 60);
	} else {
		document.getElementById("end_timer").appendChild(displayTimeLabel);
		document.getElementById("end_timer").appendChild(displayTime);
	}

	saveWorkout();

}